package com.leader.common.exploit;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Configuration;


import java.lang.reflect.Field;

/**
 * 反射转换操作工具类
 */
@Configuration
public class ClassUtils {

    private static final Logger logger = LoggerFactory.getLogger(ClassUtils.class);

    public Object toJSON(String jsonObject,Object object) throws IllegalAccessException {
        Field[] fields = object.getClass().getSuperclass().getDeclaredFields();
        Field[] fields1 = object.getClass().getDeclaredFields();
        JSONObject jsonObject1 = JSON.parseObject(jsonObject);
        object = toFileid(fields,object,jsonObject1);
        object = toFileid(fields1,object,jsonObject1);
        return object;
    }

    private Object toFileid(Field[] fields,Object object,JSONObject jsonObject) throws IllegalAccessException {
        for (Field field:fields) {
            field.setAccessible(true);
            Class ss = field.getType();
            if (ss.getTypeName() instanceof String){
                field.set(object,jsonObject.getString(field.getName()));
            }
        }
        return object;
    }
}


