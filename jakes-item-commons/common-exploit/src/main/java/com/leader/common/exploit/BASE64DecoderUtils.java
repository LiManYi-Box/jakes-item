package com.leader.common.exploit;

import com.alibaba.fastjson.JSONObject;
import com.leader.common.exception.CommonErrCode;
import com.leader.common.exception.CommonException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Configuration;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

/**
 * 编码工具
 */
@Configuration
public class BASE64DecoderUtils {
    private static final Logger logger = LoggerFactory.getLogger(BASE64DecoderUtils.class);
    BASE64Encoder base64Encoder = new BASE64Encoder();
    BASE64Decoder base64Decoder = new BASE64Decoder();


    /**
     * base64加密(String)
     * @param value
     * @return  String类型参数
     */
    public String doBASE64EString(String value){
        try{
            return base64Encoder.encode(value.getBytes("UTF-8"));
        }catch (Exception e){
            throw new CommonException(CommonErrCode.BUSINESS, "内部操作错误 >>> {} 加密失败");
        }
    }

    /**
     * base64加密(对象类型)
     * @param object
     * @return  Object类型参数
     */
    public String doBASE64EObject(Object object){
        try{
            String jsonObject = JSONObject.toJSONString(object);
            return base64Encoder.encode(jsonObject.getBytes("UTF-8"));
        }catch (Exception e){
            throw new CommonException(CommonErrCode.BUSINESS, "内部操作错误 >>> {} 解密失败");
        }
    }

    /**
     * base64解密
     * @param value
     * @return
     */
    public String toBASE64EString(String value){
        try{
            return new String(base64Decoder.decodeBuffer(value),"utf-8").replaceAll("�","");
        }catch (Exception e){
            throw new CommonException(CommonErrCode.BUSINESS, "内部操作错误 >>> {} 解密失败");
        }
    }



}

